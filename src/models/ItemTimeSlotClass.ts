/* tslint:disable */
/* eslint-disable */
/**
 * Pickup API
 * # Authorization   Pickup API accepts one type of authentication   <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemTimeSlotClass
 */
export interface ItemTimeSlotClass {
    /**
     * Time-slot indicator
     * @type {string}
     * @memberof ItemTimeSlotClass
     */
    timeSlot: string;
    /**
     * Indicates the limit of purchases an item could have in a time slot
     * @type {number}
     * @memberof ItemTimeSlotClass
     */
    limit: number;
}

/**
 * Check if a given object implements the ItemTimeSlotClass interface.
 */
export function instanceOfItemTimeSlotClass(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "timeSlot" in value;
    isInstance = isInstance && "limit" in value;

    return isInstance;
}

export function ItemTimeSlotClassFromJSON(json: any): ItemTimeSlotClass {
    return ItemTimeSlotClassFromJSONTyped(json, false);
}

export function ItemTimeSlotClassFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemTimeSlotClass {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'timeSlot': json['time_slot'],
        'limit': json['limit'],
    };
}

export function ItemTimeSlotClassToJSON(value?: ItemTimeSlotClass | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'time_slot': value.timeSlot,
        'limit': value.limit,
    };
}

