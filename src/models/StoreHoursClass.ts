/* tslint:disable */
/* eslint-disable */
/**
 * Pickup API
 * # Authorization   Pickup API accepts one type of authentication   <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StoreHoursClass
 */
export interface StoreHoursClass {
    /**
     * Indicates if the store is open on the specific day
     * @type {boolean}
     * @memberof StoreHoursClass
     */
    isOpen: boolean;
    /**
     * Day of the week 0 = Sunday, 1 = Monday , 2 = Tuesday...
     * @type {string}
     * @memberof StoreHoursClass
     */
    day: string;
    /**
     * 
     * @type {string}
     * @memberof StoreHoursClass
     */
    opening: string;
    /**
     * 
     * @type {string}
     * @memberof StoreHoursClass
     */
    closing: string;
}

/**
 * Check if a given object implements the StoreHoursClass interface.
 */
export function instanceOfStoreHoursClass(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "isOpen" in value;
    isInstance = isInstance && "day" in value;
    isInstance = isInstance && "opening" in value;
    isInstance = isInstance && "closing" in value;

    return isInstance;
}

export function StoreHoursClassFromJSON(json: any): StoreHoursClass {
    return StoreHoursClassFromJSONTyped(json, false);
}

export function StoreHoursClassFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreHoursClass {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isOpen': json['is_open'],
        'day': json['day'],
        'opening': json['opening'],
        'closing': json['closing'],
    };
}

export function StoreHoursClassToJSON(value?: StoreHoursClass | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'is_open': value.isOpen,
        'day': value.day,
        'opening': value.opening,
        'closing': value.closing,
    };
}

