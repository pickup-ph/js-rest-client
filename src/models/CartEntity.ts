/* tslint:disable */
/* eslint-disable */
/**
 * Pickup API
 * # Authorization   Pickup API accepts one type of authentication   <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CartEntity
 */
export interface CartEntity {
    /**
     * 
     * @type {string}
     * @memberof CartEntity
     */
    checkoutUrl: string;
}

/**
 * Check if a given object implements the CartEntity interface.
 */
export function instanceOfCartEntity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "checkoutUrl" in value;

    return isInstance;
}

export function CartEntityFromJSON(json: any): CartEntity {
    return CartEntityFromJSONTyped(json, false);
}

export function CartEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'checkoutUrl': json['checkout_url'],
    };
}

export function CartEntityToJSON(value?: CartEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'checkout_url': value.checkoutUrl,
    };
}

