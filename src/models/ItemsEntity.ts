/* tslint:disable */
/* eslint-disable */
/**
 * Pickup API
 * # Authorization   Pickup API accepts one type of authentication   <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ItemPartialClass } from './ItemPartialClass';
import {
    ItemPartialClassFromJSON,
    ItemPartialClassFromJSONTyped,
    ItemPartialClassToJSON,
} from './ItemPartialClass';

/**
 * 
 * @export
 * @interface ItemsEntity
 */
export interface ItemsEntity {
    /**
     * 
     * @type {boolean}
     * @memberof ItemsEntity
     */
    hasNextPage: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ItemsEntity
     */
    hasPrevPage: boolean;
    /**
     * 
     * @type {number}
     * @memberof ItemsEntity
     */
    totalPages: number;
    /**
     * 
     * @type {Array<ItemPartialClass>}
     * @memberof ItemsEntity
     */
    result: Array<ItemPartialClass>;
    /**
     * 
     * @type {number}
     * @memberof ItemsEntity
     */
    page: number;
}

/**
 * Check if a given object implements the ItemsEntity interface.
 */
export function instanceOfItemsEntity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hasNextPage" in value;
    isInstance = isInstance && "hasPrevPage" in value;
    isInstance = isInstance && "totalPages" in value;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "page" in value;

    return isInstance;
}

export function ItemsEntityFromJSON(json: any): ItemsEntity {
    return ItemsEntityFromJSONTyped(json, false);
}

export function ItemsEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemsEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hasNextPage': json['has_next_page'],
        'hasPrevPage': json['has_prev_page'],
        'totalPages': json['total_pages'],
        'result': ((json['result'] as Array<any>).map(ItemPartialClassFromJSON)),
        'page': json['page'],
    };
}

export function ItemsEntityToJSON(value?: ItemsEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'has_next_page': value.hasNextPage,
        'has_prev_page': value.hasPrevPage,
        'total_pages': value.totalPages,
        'result': ((value.result as Array<any>).map(ItemPartialClassToJSON)),
        'page': value.page,
    };
}

